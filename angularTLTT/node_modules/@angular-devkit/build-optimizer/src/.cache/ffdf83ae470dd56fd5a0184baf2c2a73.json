{"remainingRequest":"D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\aws-sdk\\lib\\browserCryptoLib.js","dependencies":[{"path":"D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\aws-sdk\\lib\\browserCryptoLib.js","mtime":1533933045000},{"path":"D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533220332000},{"path":"D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1533220284000}],"contextDependencies":[],"result":["var Hmac = require('./browserHmac');\nvar Md5 = require('./browserMd5');\nvar Sha1 = require('./browserSha1');\nvar Sha256 = require('./browserSha256');\n\n/**\n * @api private\n */\nmodule.exports = exports = {\n    createHash: function createHash(alg) {\n      alg = alg.toLowerCase();\n      if (alg === 'md5') {\n        return new Md5();\n      } else if (alg === 'sha256') {\n        return new Sha256();\n      } else if (alg === 'sha1') {\n        return new Sha1();\n      }\n\n      throw new Error('Hash algorithm ' + alg + ' is not supported in the browser SDK');\n    },\n    createHmac: function createHmac(alg, key) {\n      alg = alg.toLowerCase();\n      if (alg === 'md5') {\n        return new Hmac(Md5, key);\n      } else if (alg === 'sha256') {\n        return new Hmac(Sha256, key);\n      } else if (alg === 'sha1') {\n        return new Hmac(Sha1, key);\n      }\n\n      throw new Error('HMAC algorithm ' + alg + ' is not supported in the browser SDK');\n    },\n    createSign: function() {\n      throw new Error('createSign is not implemented in the browser');\n    }\n  }\n",null]}