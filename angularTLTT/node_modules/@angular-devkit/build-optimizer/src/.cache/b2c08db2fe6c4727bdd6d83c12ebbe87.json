{"remainingRequest":"D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\ng-recaptcha\\recaptcha\\recaptcha-value-accessor.directive.js","dependencies":[{"path":"D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\ng-recaptcha\\recaptcha\\recaptcha-value-accessor.directive.js","mtime":1524857599000},{"path":"D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533220332000},{"path":"D:\\SP\\YEAR 3\\CSC\\CA2\\angularTLTT\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1533220284000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar recaptcha_component_1 = require(\"./recaptcha.component\");\nvar RecaptchaValueAccessorDirective = /** @class */ /*@__PURE__*/ (function () {\n    function RecaptchaValueAccessorDirective(host) {\n        this.host = host;\n    }\n    RecaptchaValueAccessorDirective.prototype.writeValue = function (value) {\n        if (!value) {\n            this.host.reset();\n        }\n    };\n    RecaptchaValueAccessorDirective.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    RecaptchaValueAccessorDirective.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    RecaptchaValueAccessorDirective.prototype.onResolve = function ($event) {\n        if (this.onChange) {\n            this.onChange($event);\n        }\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    };\n    RecaptchaValueAccessorDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    providers: [\n                        {\n                            multi: true,\n                            provide: forms_1.NG_VALUE_ACCESSOR,\n                            // tslint:disable-next-line:no-forward-ref\n                            useExisting: core_1.forwardRef(function () { return RecaptchaValueAccessorDirective; }),\n                        },\n                    ],\n                    // tslint:disable-next-line:directive-selector\n                    selector: 're-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]',\n                },] },\n    ];\n    RecaptchaValueAccessorDirective.propDecorators = {\n        'onResolve': [{ type: core_1.HostListener, args: ['resolved', ['$event'],] },],\n    };\n    return RecaptchaValueAccessorDirective;\n}());\nexports.RecaptchaValueAccessorDirective = RecaptchaValueAccessorDirective;\n",null]}